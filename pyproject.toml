[tool.poetry]
name = "sklearn-instrumentation"
version = "0.11.0"
description = "scikit-learn instrumentation tooling"
authors = ["flynn <crf204@gmail.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/crflynn/sklearn-instrumentation"
repository = "https://github.com/crflynn/sklearn-instrumentation"
documentation = "https://sklearn-instrumentation.readthedocs.io/en/latest/"
keywords = ["scikit-learn", "instrumentation", "machine", "learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
]
include = [
    "CHANGELOG.rst",
    "LICENSE.txt",
    "README.rst",
]

[tool.poetry.extras]
all = [
    "prometheus-client",
    "ddtrace",
    "opentelemetry-api",
    "pyinstrument",
    "memory-profiler",
    "statsd",
]
prometheus = ["prometheus-client"]
datadog = ["ddtrace"]
opentelemetry = ["opentelemetry-api"]
pyinstrument = ["pyinstrument"]
memory-profiler = ["memory-profiler"]
statsd = ["statsd"]

[tool.poetry.dependencies]
python = ">=3.7.0"
scikit-learn = "*"
prometheus-client = {version = "^0.10.1", optional = true}
ddtrace = {version = "^0.48.0", optional = true}
opentelemetry-api = {version = "^1.0.0", optional = true}
pyinstrument = {version = "^3.4.1", optional = true}
memory-profiler = {version = "^0.58.0", optional = true}
statsd = {version = "^3.3.0", optional = true}

[tool.poetry.dev-dependencies]
black = "^20.8b1"
isort = "^5.6.4"
pytest = "^6.1.2"
pandas = "^1.1.4"
Sphinx = "^3.3.0"
sphinx-rtd-theme = "^0.5.0"
opentelemetry-sdk = "^1.0.0"
pytest-cov = "^2.10.1"
xgboost = "^1.2.1"
lightgbm = "^3.0.0"
requests = "^2.25.0"
snakeviz = "^2.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.circleci
    | \.git
    | \.github
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
force_single_line = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.pytest.ini_options]
minversion = "6.0"
#addopts = "-rsx --cov=sklearn_instrumentation --cov-report=html"
testpaths = [
    "tests",
]